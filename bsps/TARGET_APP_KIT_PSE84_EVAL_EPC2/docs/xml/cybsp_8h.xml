<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="cybsp_8h" kind="file" language="C++">
    <compoundname>cybsp.h</compoundname>
    <includes local="yes">cy_result.h</includes>
    <includes refid="cybsp__types_8h" local="yes">cybsp_types.h</includes>
    <includes refid="cybsp__hw__config_8h" local="yes">cybsp_hw_config.h</includes>
    <includes local="yes">cy_ipc_sema.h</includes>
    <includedby refid="cybsp_8c" local="yes">cybsp.c</includedby>
    <includedby refid="COMPONENT__CM33_2COMPONENT__NON__SECURE__DEVICE_2ns__system__pse84_8c" local="yes">ns_system_pse84.c</includedby>
    <includedby refid="COMPONENT__CM55_2COMPONENT__NON__SECURE__DEVICE_2ns__system__pse84_8c" local="yes">ns_system_pse84.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>cybsp.h</label>
        <link refid="cybsp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cy_ipc_sema.h</label>
      </node>
      <node id="2">
        <label>cy_result.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__bsp__errors_1gabe54a894efe81418f881d299f35266a1" prot="public" static="no">
        <name>CYBSP_PC2</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>Protection context 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" line="55" column="9" bodyfile="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__bsp__errors_1gaee745bd3fccec6eb2df1e83fc4c9f775" prot="public" static="no">
        <name>CYBSP_RSLT_ERR_SYSCLK_PM_CALLBACK</name>
        <initializer>    (CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR, CY_RSLT_MODULE_ABSTRACTION_BSP, 0))</initializer>
        <briefdescription>
<para>Failed to configure sysclk power management callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" line="58" column="9" bodyfile="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__bsp__functions_1gab989986b285e127f78f61c29f6ccbbfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t cybsp_init</definition>
        <argsstring>(void)</argsstring>
        <name>cybsp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize all hardware on the board. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>CY_RSLT_SUCCESS if the board is successfully initialized, if there is a problem initializing any hardware it returns an error code specific to the hardware module that had a problem. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>defined(CYBSP_DISABLE_SRF_INIT)</para>
        </inbodydescription>
        <location file="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" line="104" column="11" bodyfile="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.c" bodystart="296" bodyend="399" declfile="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h" declline="104" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic API for setting up boards containing a Cypress MCU. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2018-2022 Cypress Semiconductor Corporation (an Infineon company) or an affiliate of Cypress Semiconductor Corporation</para>
</simplesect>
SPDX-License-Identifier: Apache-2.0</para>
<para>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim> Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***********************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_result.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cybsp_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cybsp_hw_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_ipc_sema.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_WICED_BLE)<sp/>||<sp/>defined(COMPONENT_WICED_DUALMODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cybsp_bt_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_MW_MTB_SRF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtb_srf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_MW_MTB_IPC)<sp/>&amp;&amp;<sp/>!defined(COMPONENT_SECURE_DEVICE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtb_ipc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtb_srf_ipc_init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBSP_PC2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBSP_RSLT_ERR_SYSCLK_PM_CALLBACK<sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR,<sp/>CY_RSLT_MODULE_ABSTRACTION_BSP,<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CY_SYSTEM_CPU_M33)<sp/>&amp;&amp;<sp/>!defined(COMPONENT_SECURE_DEVICE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>cy_stc_ipc_sema_t<sp/>cybsp_ipc_sema;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_MW_MTB_SRF)<sp/>&amp;&amp;<sp/>!defined(CYBSP_DISABLE_SRF_INIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_SECURE_DEVICE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>mtb_srf_context_s_t<sp/>cybsp_srf_context;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(COMPONENT_MW_MTB_IPC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CY_SYSTEM_CPU_M55)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>mtb_srf_ipc_client_context_t<sp/>cybsp_mtb_srf_client_context;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>mtb_ipc_t<sp/>cybsp_cm55_ipc_instance;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(CY_SYSTEM_CPU_M33)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>mtb_srf_ipc_relay_context_t<sp/>cybsp_mtb_srf_relay_context;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>mtb_ipc_t<sp/>cybsp_cm33_ipc_instance;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>(CY_SYSTEM_CPU_M55)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(COMPONENT_MW_MTB_IPC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(COMPONENT_SECURE_DEVICE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(COMPONENT_MW_MTB_SRF)<sp/>&amp;&amp;<sp/>!defined(CYBSP_DISABLE_SRF_INIT)</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight><highlight class="normal">cy_rslt_t<sp/>cybsp_init(void);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CYBSP_CUSTOM_SYSCLK_PM_CALLBACK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cybsp_register_custom_sysclk_pm_callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Registers<sp/>a<sp/>power<sp/>management<sp/>callback<sp/>that<sp/>prepares<sp/>the<sp/>clock<sp/>system<sp/>for<sp/>entering<sp/>deep<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>restore<sp/>the<sp/>clocks<sp/>upon<sp/>wakeup<sp/>from<sp/>deep<sp/>sleep.<sp/>The<sp/>application<sp/>should<sp/>implement<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>and<sp/>define<sp/>`CYBSP_CUSTOM_SYSCLK_PM_CALLBACK`<sp/>if<sp/>it<sp/>needs<sp/>to<sp/>replace<sp/>the<sp/>default<sp/>SysClk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DeepSleep<sp/>callback<sp/>behavior<sp/>with<sp/>application<sp/>specific<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>is<sp/>called<sp/>automatically<sp/>as<sp/>part<sp/>of<sp/>\ref<sp/>cybsp_init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">cy_rslt_t<sp/>cybsp_register_custom_sysclk_pm_callback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(CYBSP_CUSTOM_SYSCLK_PM_CALLBACK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="output/bsps/TARGET_KIT_PSE84_EVAL_EPC2/cybsp.h"/>
  </compounddef>
</doxygen>
